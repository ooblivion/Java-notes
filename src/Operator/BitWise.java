package Operator;

public class BitWise {
    public static void main(String[] args) {
        /*
        位运算符：&	|	^		~	>>	<<	>>>

        A = 0011 1100
        B = 0000 1101

        A&B = 0000 1100   00=0 11=1 10=0 01=0
        A|B = 0011 1101   00=0 11=1 10=1 01=1
        A^B = 0011 0001   00=0 11=0 10=1 01=1
        ~B = 1111 0010

        把1和0看成真假就行
        & 两个都是1结果才是1
        | 只要有一个1结果就是1
        ^ 异或 相同0，不相同1
        ~ 0变1，1变0

        计算机基础原理里面也有相关的知识
        计算机组成原理 操作系统

        面试题目
        2*8 如何最快?
        2*8=16 => 2*2*2*2 变成位运算的时候最快
        <<
        >>

        二进制中
        0000 0000   0       ↙
        0000 0001   1      ↙
        0000 0010   2     ↙
        0000 0100   4    ↙
        0000 1000   8   ↙

        << == *2
        >> == /2

        位运算直接和底层操作，效率高

        参考计算机组成原理
        计算机底层是二进制运算，算术运算和逻辑运算
        本质上算术运算也是通过与或非逻辑器件实现的
        移位运算只需移动位置，补充0
        而2*8,这个是乘法运算，乘法运算是通过加法运算操作的，明显麻烦多了


         */

        int a = 2;
        int b = a<<3;

        System.out.println("======");
        System.out.println(b);
    }
}
